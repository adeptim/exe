cmake_minimum_required(VERSION 3.18)
# наименование проекта
project(
    lib_matrix
    VERSION 0.0.0
    DESCRIPTION "library_matrix_operation"
    LANGUAGES CXX
)
# установка минимальной версии языка и тип сборки
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_BUILD_TYPE Debug)

#переменная директории проекта
set(sources
export.h
c/c_api.h
c/c_api.cpp
src/matrix.cpp
src/matrix.h
)

include(GenerateExportHeader)

# собираем статическую библиотеку
add_library(static-matrixlib STATIC ${sources})
target_include_directories(static-matrixlib PUBLIC
"$<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}>"
"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>"
"$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>"
)

generate_export_header(static-matrixlib
EXPORT_FILE_NAME "${PROJECT_BINARY_DIR}/export_static.h"
BASE_NAME MATRIXLIB
)
target_compile_definitions(static-matrixlib 
    PUBLIC
        MATH_STATIC_DEFINE
        "$<$<BOOL:${MATH_USE_DOUBLE_PRECISION}>:MATH_DOUBLE_PRECISION_DEFINE>")
set_target_properties(static-matrixlib PROPERTIES PREFIX "")

# собираем lbyfvbxtcre. библиотеку
add_library(shared-matrixlib SHARED ${sources})
target_include_directories(shared-matrixlib PUBLIC
"$<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}>"
"$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>"
"$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>"
)
generate_export_header(shared-matrixlib
EXPORT_FILE_NAME "${PROJECT_BINARY_DIR}/export_shared.h"
BASE_NAME MATRIXLIB
)
target_compile_definitions(shared-matrixlib
    PUBLIC
      
        "$<$<BOOL:${MATH_USE_DOUBLE_PRECISION}>:MATH_DOUBLE_PRECISION_DEFINE>")
set_target_properties(shared-matrixlib  PROPERTIES PREFIX "")
# создаем тестовый exe-файл для статической библиотеки
add_executable(test-static-matrix 
    test/test-matrix-static.cpp
)
target_include_directories(test-static-matrix  PUBLIC 
    "$<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}>"
    "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>"
    "$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>"
)
target_link_libraries(test-static-matrix PRIVATE static-matrixlib)


# создаем тестовый exe-файл для динамической библиотеки
add_executable(test-shared-matrix 
    test/test-matrix-shared.cpp
)
target_include_directories(test-shared-matrix  PUBLIC 
    "$<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}>"
    "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>"
    "$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>"
)
target_link_libraries(test-shared-matrix PRIVATE shared-matrixlib)